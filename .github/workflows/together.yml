name: PR Checks

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - reopened
      - synchronize
      - labeled
      - unlabeled
      - ready_for_review

  merge_group:
    types:
      - checks_requested

jobs:
  check-branch-type:
    name: "Check if Merge Queue Branch"
    runs-on: ubuntu-latest

    steps:
      - name: Detect merge-queue event
        id: merge-queue
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "event output mq: ${{ github.event_name }}"
            echo "PR branch - checking odd/even"
            echo "is-merge-queue=false" >> $GITHUB_OUTPUT
          else
            echo "NOT PR"
            echo "is-merge-queue=true" >> $GITHUB_OUTPUT
          fi
    outputs:
      is-merge-queue: ${{ steps.merge-queue.outputs.is-merge-queue }}

  detect-relevant-changes:
    name: "Relevant Files Checks"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0
      - name: Detect relevant changes
        uses: dorny/paths-filter@v3
        id: relevant-changes
        with:
          base: "main"
          ref: ${{ github.ref }}
          filters: |
            allowed:
              - 'thisCanChange/**'  # Only run if files in this path are changed
      - name: Debug filter output here
        run: |
          echo "steps.relevant-changes.outputs.allowed = ${{ steps.relevant-changes.outputs.allowed }}"
          echo "show outputs: ${{ toJson(steps.relevant-changes.outputs) }}"
    outputs:
      should-run: ${{ steps.relevant-changes.outputs.allowed }}

  schema-and-tests:
    name: "Schema and Tests"
    runs-on: ubuntu-latest
    needs: detect-relevant-changes
    if: ${{ needs.detect-relevant-changes.outputs.should-run == 'true' }}
    steps:
      - name: Generate random number and test odd/even
        run: |
          num=$(( RANDOM % 100 ))
          echo "Number is $num"
          if (( num % 2 == 0 )); then
            echo "Number is even"
          else
            echo "Number is odd"
          fi
          exit 0

  build-and-deploy:
    runs-on: ubuntu-latest
    name: "Build and Deploy"
    needs: [detect-relevant-changes, check-branch-type]
    if: ${{ needs.check-branch-type.outputs.is-merge-queue == 'false' && needs.detect-relevant-changes.outputs.should-run == 'true' }}
    steps:
      - name: Check current minute build deploy
        run: |
          minute=$(date +'%M')
          echo "Current minute: $minute"
          if (( minute % 3 != 0 )); then
            echo "Minute not divisible by 3 â†’ FAIL"
            exit 1
          else
            echo "Minute Ã· 3 â†’ PASS"
          fi

  pr-valid:
    name: "PR Validation"
    runs-on: ubuntu-latest
    needs: [schema-and-tests, build-and-deploy]
    if: ${{ always() }}
    steps:
      - name: Debug job results
        run: |
          echo "schema-and-tests result: ${{ needs.schema-and-tests.result }}"
          echo "build-and-deploy result: ${{ needs.build-and-deploy.result }}"
      - name: Check required jobs
        run: |
          set -x
          # Fail if any mandatory jobs failed
          if [[ "${{ needs.schema-and-tests.result }}"       != "success" ]]  && [[ "${{ needs.schema-and-tests.result }}" != "skipped" ]] || \
              [[ "${{ needs.build-and-deploy.result }}" != "success" ]] && [[ "${{ needs.build-and-deploy.result }}" != "skipped" ]]; then
            exit 1
          fi

      - name: PR Validation Complete
        run: |
          echo "All required checks passed (deploy was either skipped or successful). ðŸŽ‰"
