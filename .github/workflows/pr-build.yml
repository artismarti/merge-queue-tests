name: PR Build and Deploy
on:
  # temporary workaround for
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to build/deploy"
        required: true
  # workflow_run:
  #   workflows: [PR Verify]
  #   types: [completed]

jobs:
  # pr-verify-successful:
  #   runs-on: ubuntu-latest
  #   if: ${{ github.event.workflow_run.conclusion == 'success' }}
  #   steps:
  #     - run: echo 'PR Verify workflow passed üéâ'
  # is-not-merge-queue-branch:
  #   runs-on: ubuntu-latest
  #   needs: pr-verify-successful
  #   if: ${{ github.event.workflow_run.pull_requests }}
  #   steps:
  #     - run: echo 'This is not a merge queue branch - continuing üçâ'

  detect-relevant-changes:
    runs-on: ubuntu-latest
    # This job is only run when:
    # 1) the workflow_run event has pull_requests
    # Merge queue branches do not have pull_requests
    # 2) the pr-verify workflow conclusion is 'success'
    # needs: [pr-verify-successful, is-not-merge-queue-branch]

    steps:
      - uses: actions/checkout@v4
        with:
          # needs explicit ref to checkout the PR branch
          # because triggers from workflow-run default to the base branch of the PR as ref
          ref: ${{ github.event.inputs.branch }}
          fetch-depth: 2
          # # because triggers from workflow-run default to the base branch of the PR as ref
          # ref: ${{ github.event.workflow_run.head_branch }}

      - name: Detect relevant changes
        uses: dorny/paths-filter@v3
        id: relevant-changes
        with:
          base: HEAD~1
          # base: "main"
          ref: HEAD
          # list-files: none
          # ref: ${{ github.event.workflow_run.head_branch }}

          filters: |
            allowed:
              - '**/*'                # all files‚Ä¶
              - '!ignoreMe.js'        # ‚Ä¶except these
              - '!doNotTest/**'
      # skip if only ignored files changed
      - name: Debug filter output here
        run: |
          echo "steps.relevant-changes.outputs.allowed = '${{ steps.relevant-changes.outputs.allowed }}'"
          echo "all outputs: ${{ toJson(steps.relevant-changes.outputs) }}"
    outputs:
      should-run: steps.relevant-changes.outputs.allowed

  minute-divisible-by-3:
    runs-on: ubuntu-latest
    # ‚Üê only run if detect said ‚Äútrue‚Äù
    needs: [detect-relevant-changes]
    if: ${{ needs.detect-relevant-changes.outputs.should-run }}
    steps:
      - name: Check current minute % 3
        run: |
          minute=$(date +'%M')
          echo "Current minute: $minute"
          if (( minute % 3 != 0 )); then
            echo "Minute not divisible by 3 ‚Üí FAIL"
            exit 1
          else
            echo "Minute √∑ 3 ‚Üí PASS"
          fi
